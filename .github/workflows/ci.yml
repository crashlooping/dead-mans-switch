name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1
          args: --enable=unused --tests=false
      - name: Test
        run: |
          go vet ./...
          go test -cover ./...

  build:
    runs-on: ubuntu-latest
    needs: lint-test
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64, arm]
        exclude:
          - goos: windows
            goarch: arm64
          - goos: windows
            goarch: arm
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Build
        run: |
          if [ "$GOOS" = "windows" ]; then \
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dead-mans-switch-${{ matrix.goos }}-${{ matrix.goarch }}.exe .; \
          else \
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dead-mans-switch-${{ matrix.goos }}-${{ matrix.goarch }} .; \
          fi

  docker:
    runs-on: ubuntu-latest
    needs: build
    environment: default
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Build and push multi-arch Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 \
            -t ghcr.io/${{ github.repository }}:latest \
            --push .
