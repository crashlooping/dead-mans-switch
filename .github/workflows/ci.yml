name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1
          args: --enable=unused --tests=false
      - name: Test
        run: |
          go vet ./...
          go test -cover ./...

  build:
    runs-on: ubuntu-latest
    needs: lint-test
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64, arm]
        exclude:
          - goos: windows
            goarch: arm64
          - goos: windows
            goarch: arm
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Build
        run: |
          if [ "$GOOS" = "windows" ]; then \
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dead-mans-switch-${{ matrix.goos }}-${{ matrix.goarch }}.exe .; \
          else \
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dead-mans-switch-${{ matrix.goos }}-${{ matrix.goarch }} .; \
          fi

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.actor != 'dependabot[bot]'
    environment: default
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Build and push multi-arch Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 \
            -t ghcr.io/${{ github.repository }}/dead-mans-switch:latest \
            --push .

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published' && github.actor != 'dependabot[bot]'
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./build-artifacts
      - name: Archive binaries
        run: |
          mkdir -p ./build-artifacts
          cp dead-mans-switch-linux-amd64 ./build-artifacts/ || true
          cp dead-mans-switch-linux-arm64 ./build-artifacts/ || true
          cp dead-mans-switch-linux-arm ./build-artifacts/ || true
          cp dead-mans-switch-windows-amd64.exe ./build-artifacts/ || true
      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./build-artifacts/**/*
